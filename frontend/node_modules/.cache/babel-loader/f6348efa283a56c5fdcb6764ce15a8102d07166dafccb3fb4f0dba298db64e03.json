{"ast":null,"code":"var _jsxFileName = \"/Users/poojashanmugananthan/task_app/frontend/src/pages/Tasks.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/Tasks.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    if (!token) {\n      navigate(\"/\");\n      return;\n    }\n    fetchTasks();\n  }, []);\n\n  // Fetch tasks from API\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5000/tasks\", {\n        headers: {\n          Authorization: token\n        }\n      });\n      setTasks(response.data);\n    } catch (error) {\n      console.error(\"Error fetching tasks\", error);\n    }\n  };\n\n  // Create new task\n  const handleCreateTask = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:5000/tasks\", {\n        title,\n        description\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n      setTitle(\"\");\n      setDescription(\"\");\n      fetchTasks(); // Refresh tasks\n    } catch (error) {\n      console.error(\"Error creating task\", error);\n    }\n  };\n\n  // Toggle task completion\n  const handleToggleTask = async id => {\n    try {\n      await axios.put(`http://localhost:5000/tasks/${id}`, {}, {\n        headers: {\n          Authorization: token\n        }\n      });\n      fetchTasks(); // Refresh tasks\n    } catch (error) {\n      console.error(\"Error updating task\", error);\n    }\n  };\n\n  // Delete task\n  const handleDeleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      fetchTasks(); // Refresh tasks\n    } catch (error) {\n      console.error(\"Error deleting task\", error);\n    }\n  };\n\n  // Logout user\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"task-form\",\n      onSubmit: handleCreateTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `task-item ${task.isComplete ? \"completed\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [task.title, \" - \", task.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleToggleTask(task.id),\n          children: task.isComplete ? \"Undo\" : \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(Tasks, \"u/+sTJxAH+Jg4Gz8QKqAo4WrssQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","title","setTitle","description","setDescription","navigate","token","localStorage","getItem","fetchTasks","response","get","headers","Authorization","data","error","console","handleCreateTask","e","preventDefault","post","handleToggleTask","id","put","handleDeleteTask","delete","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","target","required","map","task","isComplete","_c","$RefreshReg$"],"sources":["/Users/poojashanmugananthan/task_app/frontend/src/pages/Tasks.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/Tasks.css\";\n\ninterface Task {\n    id: number;\n    title: string;\n    description: string;\n    isComplete: boolean;\n}\n\nconst Tasks = () => {\n    const [tasks, setTasks] = useState<Task[]>([]);\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const navigate = useNavigate();\n    const token = localStorage.getItem(\"token\");\n\n    useEffect(() => {\n        if (!token) {\n            navigate(\"/\");\n            return;\n        }\n        fetchTasks();\n    }, []);\n\n    // Fetch tasks from API\n    const fetchTasks = async () => {\n        try {\n            const response = await axios.get(\"http://localhost:5000/tasks\", {\n                headers: { Authorization: token },\n            });\n            setTasks(response.data);\n        } catch (error) {\n            console.error(\"Error fetching tasks\", error);\n        }\n    };\n\n    // Create new task\n    const handleCreateTask = async (e: React.FormEvent) => {\n        e.preventDefault();\n        try {\n            await axios.post(\n                \"http://localhost:5000/tasks\",\n                { title, description },\n                { headers: { Authorization: token } }\n            );\n            setTitle(\"\");\n            setDescription(\"\");\n            fetchTasks(); // Refresh tasks\n        } catch (error) {\n            console.error(\"Error creating task\", error);\n        }\n    };\n\n    // Toggle task completion\n    const handleToggleTask = async (id: number) => {\n        try {\n            await axios.put(`http://localhost:5000/tasks/${id}`, {}, { headers: { Authorization: token } });\n            fetchTasks(); // Refresh tasks\n        } catch (error) {\n            console.error(\"Error updating task\", error);\n        }\n    };\n\n    // Delete task\n    const handleDeleteTask = async (id: number) => {\n        try {\n            await axios.delete(`http://localhost:5000/tasks/${id}`, { headers: { Authorization: token } });\n            fetchTasks(); // Refresh tasks\n        } catch (error) {\n            console.error(\"Error deleting task\", error);\n        }\n    };\n\n    // Logout user\n    const handleLogout = () => {\n        localStorage.removeItem(\"token\");\n        navigate(\"/\");\n    };\n\n    return (\n        <div className=\"tasks-container\">\n            <h2>Task Manager</h2>\n            <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\n\n            <form className=\"task-form\" onSubmit={handleCreateTask}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Task Title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    required\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Task Description\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                />\n                <button type=\"submit\">Add Task</button>\n            </form>\n\n            <ul className=\"task-list\">\n                {tasks.map((task) => (\n                    <li key={task.id} className={`task-item ${task.isComplete ? \"completed\" : \"\"}`}>\n                        <span>{task.title} - {task.description}</span>\n                        <button onClick={() => handleToggleTask(task.id)}>\n                            {task.isComplete ? \"Undo\" : \"Complete\"}\n                        </button>\n                        <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Tasks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}